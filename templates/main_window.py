# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("Faricker")
        MainWindow.resize(268, 225)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.centralwidget.setStyleSheet('background: #a3a19d;')
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.login = QtWidgets.QLabel(self.centralwidget)
        self.password = QtWidgets.QLabel(self.centralwidget)
        self.place = QtWidgets.QLabel(self.centralwidget)
        self.price_limit = QtWidgets.QLabel(self.centralwidget)
        self.update_frequency = QtWidgets.QLabel(self.centralwidget)
        self.working_hours = QtWidgets.QLabel(self.centralwidget)
        self.post_ids = QtWidgets.QLabel(self.centralwidget)
        self.replace_frequency = QtWidgets.QLabel(self.centralwidget)
        self.cashback_waiting = QtWidgets.QLabel(self.centralwidget)
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setMinimumSize(QtCore.QSize(250, 80))
        self.pushButton_3.setStyleSheet('QPushButton#pushButton_3:hover:!pressed {background-color: #8c8c8c;}')
        font = QtGui.QFont()
        font.setFamily("Montserrat Medium")
        font.setPointSize(27)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setAutoFillBackground(False)
        self.pushButton_3.setCheckable(False)
        self.pushButton_3.setChecked(False)
        self.pushButton_3.setAutoDefault(True)
        self.pushButton_3.setDefault(False)
        self.pushButton_3.setFlat(False)
        self.pushButton_3.setObjectName("pushButton_3")
        self.gridLayout.addWidget(self.pushButton_3, 0, 0, 1, 1)
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setMinimumSize(QtCore.QSize(250, 80))
        self.pushButton_4.setStyleSheet('QPushButton#pushButton_4:hover:!pressed {background-color: #8c8c8c;}')
        font = QtGui.QFont()
        font.setFamily("Montserrat Medium")
        font.setPointSize(27)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        font.setKerning(True)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.pushButton_4.setFont(font)
        self.pushButton_4.setTabletTracking(False)
        self.pushButton_4.setAutoDefault(True)
        self.pushButton_4.setDefault(False)
        self.pushButton_4.setObjectName("pushButton_4")
        self.gridLayout.addWidget(self.pushButton_4, 1, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 268, 21))
        self.menubar.setObjectName("menubar")
        self.menuChange = QtWidgets.QMenu(self.menubar)
        self.menuChange.setObjectName("menuChange")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionProfile_Data = QtWidgets.QAction(MainWindow)
        self.actionProfile_Data.setObjectName("actionProfile_Data")
        self.actionUpdate_Frequency = QtWidgets.QAction(MainWindow)
        self.actionUpdate_Frequency.setObjectName("actionUpdate_Frequency")
        self.actionPrice_Limit = QtWidgets.QAction(MainWindow)
        self.actionPrice_Limit.setObjectName("actionPrice_Limit")
        self.actionreplace_frequency = QtWidgets.QAction(MainWindow)
        self.actionreplace_frequency.setObjectName("actionreplace_frequency")
        self.actioncashback_waiting = QtWidgets.QAction(MainWindow)
        self.actioncashback_waiting.setObjectName("actioncashback_waiting")
        self.actionWorking_Hours = QtWidgets.QAction(MainWindow)
        self.actionWorking_Hours.setObjectName("actionWorking_Hours")
        self.actionPlace = QtWidgets.QAction(MainWindow)
        self.actionPlace.setObjectName("actionPlace")
        self.actionPostID = QtWidgets.QAction(MainWindow)
        self.actionPostID.setObjectName("actionPostID")
        self.menuChange.addAction(self.actionProfile_Data)
        self.menuChange.addAction(self.actionUpdate_Frequency)
        self.menuChange.addAction(self.actionreplace_frequency)
        self.menuChange.addAction(self.actionPrice_Limit)
        self.menuChange.addAction(self.actionWorking_Hours)
        self.menuChange.addAction(self.actionPostID)
        self.menuChange.addAction(self.actionPlace)
        self.menuChange.addAction(self.actioncashback_waiting)
        self.menubar.addAction(self.menuChange.menuAction())
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Faricker"))
        self.pushButton_3.setText(_translate("MainWindow", "Start"))
        self.pushButton_4.setText(_translate("MainWindow", "Stop"))
        self.menuChange.setTitle(_translate("MainWindow", "Change"))
        self.actionProfile_Data.setText(_translate("MainWindow", "Profile Data"))
        self.actionUpdate_Frequency.setText(_translate("MainWindow", "Update Frequency"))
        self.actionPrice_Limit.setText(_translate("MainWindow", "Price Limit"))
        self.actionWorking_Hours.setText(_translate("MainWindow", "Working Hours"))
        self.actionPostID.setText(_translate("MainWindow", "Post ID"))
        self.actionreplace_frequency.setText(_translate("MainWindow", "Replace Frequency"))
        self.actionPlace.setText(_translate("MainWindow", "Place To One Per Hour Migrate"))
        self.actioncashback_waiting.setText(_translate("MainWindow", "Cashback waiting time"))
